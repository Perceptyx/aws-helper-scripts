#!/bin/bash
# Associate an Elastic IP Address to an instance

source $(dirname $0)/../inc/ec2-include

if [ ! $1 ]; then
  echo "Usage: $(basename $0) IP_ADDRESS"
  echo
  echo "           IP_ADDRESS - The elastic IP to attach to this instance. "
  exit
fi

IP_ADDRESS=$1
ATTACHED_INSTANCE=$(aws ec2 describe-addresses --filters "Name=public-ip,Values=$IP_ADDRESS" --query Addresses[0].InstanceId --output text)

function associate-address {
  echo "Attaching IP Address $IP_ADDRESS ..."
  aws ec2 associate-address --instance-id $INSTANCE_ID --public-ip $IP_ADDRESS
}

if [ "$PUBLIC_IP" = "$IP_ADDRESS" ]; then
  echo "address $IP_ADDRESS is already associated with this this instance"
  exit 0
elif [ -n "$PUBLIC_IP" ]; then
  echo "this instance is already associated with another IP: $PUBLIC_IP"
  echo "$IP_ADDRESS will be the new address after it is attached"
  associate-address
elif [ ! "$ATTACHED_INSTANCE" = "None" ]; then
  echo "address $IP_ADDRESS is already associated with instance $ATTACHED_INSTANCE"
  echo "disassociate it from instance $ATTACHED_INSTANCE before running this script again"
  exit 1
else
  associate-address
fi

# Make the script wait until the network connection is back up before we continue.
perl -MIO::Socket::INET -e 'until(new IO::Socket::INET("169.254.169.254:80")){print"Waiting for network connection after associating an Elastic IP...\n";sleep 1}'
